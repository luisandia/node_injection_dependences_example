{
  "openapi": "3.0.0",
  "info": {
    "title": "Puridiom Invoices",
    "version": "v0.1"
  },
  "servers": [
    {
      "description": "Local server",
      "url": "/api"
    }
  ],
  "paths": {
    "/invoices": {
      "get": {
        "operationId": "listInvoices",
        "tags": [ "Invoices" ],
        "responses": {
          "200": {
            "description": "List of all invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createInvoice",
        "tags": [ "Invoices" ],
        "requestBody": {
          "description": "Invoice data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewInvoice"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invoice created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "Invoice not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{invoiceId}": {
      "get": {
        "operationId": "showInvoice",
        "tags": [ "Invoices" ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Id of invoice to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return invoice with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateInvoice",
        "tags": [ "Invoices" ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Id of invoice to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "User new data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewInvoice"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Invoice updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteInvoice",
        "tags": [ "Invoices" ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Id of invoice to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "Invoice deleted successfully"
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Invoice": {
        "allOf": [
          { "$ref": "#/components/schemas/NewInvoice" },
          {
            "required": [ "invoiceId" ],
            "properties": {
              "invoiceId": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "NewInvoice": {
        "required": [ "invoiceId" ],
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format":"int64"
          }
        }
      },
      "ValidationError": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [ "ValidationError" ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorDetail"
            }
          }
        }
      },
      "ValidationErrorDetail": {
        "properties": {
          "message": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "NotFoundError": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [ "NotFoundError" ]
          },
          "details": {
            "type": "string",
            "enum": [ "Invoice with invoiceId {invoiceId} not found" ]
          }
        }
      }
    }
  }
}
